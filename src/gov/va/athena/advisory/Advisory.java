package gov.va.athena.advisory;

import java.util.*;

//import edu.stanford.smi.eon.PCAServerModule.Guideline_Service_Record;

/**
 * Generated by Protege (http://protege.stanford.edu).
 * Source Class: Advisory
 *
 * @version generated on Thu Jul 05 01:40:52 GMT 2012
 */
public interface Advisory {

    // Slot advisory_id
    String getAdvisory_id();
    boolean hasAdvisory_id();
    void setAdvisory_id(String newAdvisory_id);

    // Slot advisory_time
    String getAdvisory_time();
    boolean hasAdvisory_time();
    void setAdvisory_time(String newAdvisory_time);

    // Slot start_time (performance measure period start time)
    String getStart_time();
    boolean hasStart_time();
    void setStart_time(String newStart_time);

    // Slot stop_time (Performance measurement period stop time)
    String getStop_time();
    boolean hasStop_time();
    void setStop_time(String newStop_time);

    // Slot assumption
    String getAssumption();
    boolean hasAssumption();
    void setAssumption(String newAssumption);

    // Slot case_id
    String getCase_id();
    boolean hasCase_id();
    void setCase_id(String newCase_id);

    // Slot drug_recommendation
    Collection<Drug_Recommendation> getDrug_recommendation();
    boolean hasDrug_recommendation();
    void addDrug_recommendation(Drug_Recommendation newDrug_recommendation);
    void removeDrug_recommendation(Drug_Recommendation oldDrug_recommendation);
    void setDrug_recommendation(Collection<? extends Drug_Recommendation> newDrug_recommendation);


    // Slot evaluated_goal
    Collection<Guideline_Goal> getEvaluated_goal();
    boolean hasEvaluated_goal();
    void addEvaluated_goal(Guideline_Goal newEvaluated_goal);
    void removeEvaluated_goal(Guideline_Goal oldEvaluated_goal);
    void setEvaluated_goal(Collection<? extends Guideline_Goal> newEvaluated_goal);

    // Slot guideline_id
    String getGuideline_id();
    boolean hasGuideline_id();
    void setGuideline_id(String newGuideline_id);

    // Slot hospitalization_id
    String getHospitalization_id();
    boolean hasHospitalization_id();
    void setHospitalization_id(String newHospitalization_id);

    // Slot patient_characteristic
    Collection<Conclusion> getPatient_characteristic();
    boolean hasPatient_characteristic();
    void addPatient_characteristic(Conclusion newPatient_characteristic);
    void removePatient_characteristic(Conclusion oldPatient_characteristic);
    void setPatient_characteristic(Collection<? extends Conclusion> newPatient_characteristic);
    
    // Slot provider
    String getProvider();
    boolean hasProvider();
    void setProvider(String newProvider);

    // Slot station
    String getStation();
    boolean hasStation();
    void setStation(String newStation);
    
    // debugHTML: debugging information(patient data, scenarios, action choices, recommendations) in HTML format all in 1 String
    String getDebugHTML();
    boolean hasDebugHTML();
    void setDebugHTML(String debugData);
    
    // debugHTML: debugging information(patient data, scenarios, action choices, recommendations) in HTML format all in 1 String
    String getInputData();
    boolean hasInputData();
    void setInputData(String inputHTMLData);    
        
    // Slot recommended_action
    public Collection<Action> getRecommended_action();
    public boolean hasRecommended_action();
    public void addRecommended_action(Action newRecommended_action);
    public void removeRecommended_action(Action oldRecommended_action);
    public void setRecommended_action(Collection<? extends Action> newRecommended_action);

    // Slot Exclusion
    //Collection<Exclusion> getExclusion();
    //boolean hasExclusion();
    //void addExclusion(Exclusion newExclusion);
    //void removeExclusion(Exclusion oldExclusion);
    //void setExclusion(Collection<? extends Exclusion> newExclusion);

    //public Advisory instantiate(Guideline_Service_Record dssOutput);
}
