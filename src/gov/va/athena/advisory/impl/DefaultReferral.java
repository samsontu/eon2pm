package gov.va.athena.advisory.impl;

import gov.va.athena.advisory.*;

/**
 * Generated by Protege (http://protege.stanford.edu).
 * Source Class: Referral
 *
 * @version generated on Thu Jul 05 01:40:52 GMT 2012
 */
public class DefaultReferral extends DefaultAction implements Referral {

    /* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((who_to == null) ? 0 : who_to.hashCode());
		return result;
	}



	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (!super.equals(obj)) {
			return false;
		}
		if (!(obj instanceof DefaultReferral)) {
			return false;
		}
		DefaultReferral other = (DefaultReferral) obj;
		if (who_to == null) {
			if (other.who_to != null) {
				return false;
			}
		} else if (!who_to.equals(other.who_to)) {
			return false;
		}
		return true;
	}

	protected String who_to = null;
    protected String when_lower_bound_unit;
    protected String when_upper_bound_unit;
    protected int when_lower_bound=0;
    protected int when_upper_bound=0;
    protected String when;

    public DefaultReferral() {
    }



    // Slot who_to

    public String getWho_to() {
        return who_to;
    }

    public boolean hasWho_to() {
        return (who_to !=null);
    }


    public void setWho_to(String newWho_to) {
    	who_to = newWho_to;
    }


    // Slot when

    public String getWhen() {
        return when;
    }

    public boolean hasWhen() {
        return (when != null);
    }


    public void setWhen(String newWhen) {
        when= newWhen;
    }

    // Slot when_lower_bound_unit

    public String getWhen_lower_bound_unit() {
        return when_lower_bound_unit;
    }

    public boolean hasWhen_lower_bound_unit() {
        return (when_lower_bound_unit != null);
    }


    public void setWhen_lower_bound_unit(String newWhen_unit) {
        when_lower_bound_unit= newWhen_unit;
    }

    // Slot when_upper_bound_unit

    public String getWhen_upper_bound_unit() {
        return when_upper_bound_unit;
    }

    public boolean hasWhen_upper_bound_unit() {
        return (when_upper_bound_unit != null);
    }


    public void setWhen_upper_bound_unit(String newWhen_unit) {
        when_upper_bound_unit= newWhen_unit;
    }

    // Slot when_upper_bound

    public int getWhen_upper_bound() {
        return when_upper_bound;
    }

    public boolean hasWhen_upper_bound() {
        return (when_upper_bound != 0);
    }


    public void setWhen_upper_bound(int newWhen_lb) {
        when_upper_bound= newWhen_lb;
    }

    // Slot when_lower_bound

    public int getWhen_lower_bound() {
        return when_lower_bound;
    }

    public boolean hasWhen_lower_bound() {
        return (when_lower_bound != 0);
    }


    public void setWhen_lower_bound(int newWhen_lb) {
        when_lower_bound= newWhen_lb;
    }
    
    public boolean equals(Referral aRef)  {
      if (!super.equals( aRef )) 
        return false;
      if (!who_to.equals(aRef.getWho_to()))
        return false;
      return true;
    }      

}
